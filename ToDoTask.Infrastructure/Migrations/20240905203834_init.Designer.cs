// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoTask.Infrastructure.Context;

#nullable disable

namespace ToDoTask.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240905203834_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoTask.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("ToDoTask.Domain.Entities.ToDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ToDos");
                });

            modelBuilder.Entity("ToDoTask.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alice Johnson",
                            Password = "$2a$11$b.3A6am7nKQOUPf1Qwy5Uu71qz9EwouS36TYWqHzJBv6f1Rn5md2q",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bob Smith",
                            Password = "$2a$11$Cjem2z0sOM3FzXSdBMV/KOoIlDjkxSzeOvUsm141nybeaDVPJkcF.",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Carol Davis",
                            Password = "$2a$11$oO.w2v0l9uMB1slci35nvu0zX7/lSX4AADmZwz1bp/DKffO3tMlnq",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "David Wilson",
                            Password = "$2a$11$m0PnpFLTg6zU6Sa9a/fgA.wypVRAJA/d1povil.OhiEnO4sE6oVqG",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Emily Brown",
                            Password = "$2a$11$cOgBXK73oYmkjahCkcMDwO/YoN7ikrkXDCHbxFWsumJ38WaYMn1Ey",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Frank Harris",
                            Password = "$2a$11$hdYNFXohq.VfT1l5l33uW.ejDeKCwb4UlRKVkRgPTvCFKFaoODgUa",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "Grace Martin",
                            Password = "$2a$11$ZzMws6wLvl2aTJqh69j0l.EF9U0DmD.3ulXGbGTHoovseAjogPC7S",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 8,
                            Name = "Henry Thompson",
                            Password = "$2a$11$T1zTLfw2Zn4k.RVJ0Zv8POPyql6Jjv.8bJ/X96GSdXVjtqG.SkbTy",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 9,
                            Name = "Ivy Garcia",
                            Password = "$2a$11$R39zUKOe1RwiWOV/Q5Rn4.bCcRHXlDPaCS2bS.OEjL4/QAvWpIaNO",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "Jack Lee",
                            Password = "$2a$11$jfppudvKA/08QzWnzdzw0O5fqtKN6H4C3vF1688xGlvX0wIpyDV8m",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("ToDoTask.Domain.Entities.ToDo", b =>
                {
                    b.HasOne("ToDoTask.Domain.Entities.User", "User")
                        .WithMany("ToDos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToDoTask.Domain.Entities.User", b =>
                {
                    b.HasOne("ToDoTask.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ToDoTask.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ToDoTask.Domain.Entities.User", b =>
                {
                    b.Navigation("ToDos");
                });
#pragma warning restore 612, 618
        }
    }
}
